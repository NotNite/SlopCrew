syntax = "proto3";
package club.sloppers;
option csharp_namespace = "SlopCrew.Common.Proto";

import "common.proto";

message ClientboundMessage {
  oneof message {
    ClientboundHello hello = 1;
    ClientboundPlayersUpdate players_update = 2;
    ClientboundPositionUpdate position_update = 3;
    ClientboundPong pong = 4;
    ClientboundVisualUpdate visual_update = 5;
    ClientboundAnimationUpdate animation_update = 6;

    ClientboundEncounterRequest encounter_request = 7;
    ClientboundEncounterStart encounter_start = 8;
    ClientboundEncounterUpdate encounter_update = 9;
    ClientboundEncounterEnd encounter_end = 10;

    ClientboundCustomPacket custom_packet = 11;
    ClientboundQuickChat quick_chat = 12;
  }
}

message ClientboundHello {
  int32 tick_rate = 1;
  repeated string banned_plugins = 2;
  uint32 score_battle_length = 3;
  uint32 combo_battle_length = 4;
  uint32 player_id = 5;
}

message ClientboundPlayersUpdate {
  repeated Player players = 1;
}

message ClientboundPositionUpdate {
  repeated PositionUpdate updates = 1;
}

message ClientboundPong {
  uint32 id = 1;
  uint64 tick = 2;
}

message ClientboundVisualUpdate {
  repeated VisualUpdate updates = 1;
}

message ClientboundAnimationUpdate {
  repeated AnimationUpdate updates = 1;
}

message ClientboundEncounterRequest {
  EncounterType type = 1;
  optional uint32 player_id = 2;
}

message ClientboundEncounterStart {
  EncounterType type = 1;
  oneof data {
    SimpleEncounterStartData simple = 2;
    RaceEncounterStartData race = 3;
  }
}

message SimpleEncounterStartData {
  uint32 player_id = 1;
}

message RaceEncounterStartData {
  RaceConfig config = 1;
}

message ClientboundEncounterUpdate {
  EncounterType type = 1;
  oneof data {
    ClientboundSimpleEncounterUpdateData simple = 2;
    ClientboundRaceEncounterUpdateData race = 3;
  }
}

message ClientboundSimpleEncounterUpdateData {
  Score your_score = 1;
  Score opponent_score = 2;
  optional bool your_combo_dropped = 3;
  optional bool opponent_combo_dropped = 4;
}

message ClientboundRaceEncounterUpdateData {
  repeated RaceTime times = 1;
}

message ClientboundEncounterEnd {
  EncounterType type = 1;
  oneof data {
    SimpleEncounterEndData simple = 2;
    ClientboundRaceEncounterUpdateData race = 3; // just reuse this
  }
}

message SimpleEncounterEndData {
  bool ended_early = 1;
  Score your_score = 2;
  Score opponent_score = 3;
}

message ClientboundCustomPacket {
  uint32 player_id = 1;
  CustomPacket packet = 2;
}

message ClientboundQuickChat {
  uint32 player_id = 1;
  QuickChat quick_chat = 2;
}
